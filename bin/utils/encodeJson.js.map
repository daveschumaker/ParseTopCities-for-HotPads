{"version":3,"sources":["../../src/utils/encodeJson.js"],"names":["forOwn","require","split","dropRight","last","output","types","encodeJson","input","cities","state","toLowerCase","stateContainer","cityName","listingTypes","slug","flags","forEach","type","url","push"],"mappings":";;;;;AAAA,IAAMA,SAASC,QAAQ,eAAR,CAAf;AACA,IAAMC,QAAQD,QAAQ,cAAR,CAAd;AACA,IAAME,YAAYF,QAAQ,kBAAR,CAAlB;AACA,IAAMG,OAAOH,QAAQ,aAAR,CAAb;AACA,IAAMI,SAAS,EAAf;;AAEA,IAAMC,QAAQ;AACV,2BAAuB,CADb;AAEV,2BAAuB,CAFb;AAGV,sBAAkB,CAHR;AAIV,uBAAmB;AAJT,CAAd;;AAOA,IAAMC,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC1BR,WAAOQ,KAAP,EAAc,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC7B,YAAIA,UAAU,MAAd,EAAsB;AAClB;AACA;AACH;AACDA,gBAAQA,MAAMC,WAAN,EAAR;AACA,YAAMC,iBAAiBP,OAAOK,KAAP,IAAgB,EAAvC;AACAV,eAAOS,MAAP,EAAe,gBAAiBI,QAAjB,EAA8B;AAAA,gBAA5BC,YAA4B,QAA5BA,YAA4B;;AACzC,gBAAIC,aAAJ;AACA,gBAAIC,QAAQ,CAAZ;;AAEAF,yBAAaG,OAAb,CAAqB,iBAAiB;AAAA,oBAAfC,IAAe,SAAfA,IAAe;AAAA,oBAATC,GAAS,SAATA,GAAS;;AAClCJ,uBAAOX,KAAKD,UAAUD,MAAMiB,GAAN,EAAW,GAAX,CAAV,EAA2B,CAA3B,CAAL,CAAP;AACAH,yBAASV,MAAMY,IAAN,CAAT;AACH,aAHD;;AAKAN,2BAAeQ,IAAf,CAAoBP,QAApB,EAA8BE,KAAKJ,WAAL,EAA9B,EAAkDK,KAAlD;AACH,SAVD;AAWH,KAlBD;;AAoBA,WAAOX,MAAP;AACH,CAtBD;;kBAwBeE,U","file":"encodeJson.js","sourcesContent":["const forOwn = require('lodash/forOwn');\nconst split = require('lodash/split');\nconst dropRight = require('lodash/dropRight');\nconst last = require('lodash/last');\nconst output = {};\n\nconst types = {\n    'Apartments for rent': 1,\n    'Apartment complexes': 2,\n    'Homes for sale': 4,\n    'Houses for rent': 8\n};\n\nconst encodeJson = (input) => {\n    forOwn(input, (cities, state) => {\n        if (state === 'REST') {\n            // Bad data in topCities.json\n            return;\n        }\n        state = state.toLowerCase();\n        const stateContainer = output[state] = [];\n        forOwn(cities, ({listingTypes}, cityName) => {\n            let slug;\n            let flags = 0;\n\n            listingTypes.forEach(({type, url}) => {\n                slug = last(dropRight(split(url, '/'), 1));\n                flags |= types[type];\n            });\n\n            stateContainer.push(cityName, slug.toLowerCase(), flags);\n        });\n    });\n\n    return output;\n}\n\nexport default encodeJson;"]}