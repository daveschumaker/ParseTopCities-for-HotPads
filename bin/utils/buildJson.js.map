{"version":3,"sources":["../../src/utils/buildJson.js"],"names":["buildJson","data","Promise","resolve","reject","topCities","forEach","obj","state","name","listingTypes","newListingType","type","getType","url","push"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAIA,YAAY,SAAZA,SAAY,CAACC,IAAD,EAAU;AACtB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,YAAY,EAAhB;;AAEAJ,aAAKK,OAAL,CAAa,UAACC,GAAD,EAAS;AAClB;AACA,gBAAI,CAACF,UAAUE,IAAIC,KAAd,CAAL,EAA2B;AACvBH,0BAAUE,IAAIC,KAAd,IAAuB,EAAvB;AACH;;AAED;AACA,gBAAI,CAACH,UAAUE,IAAIC,KAAd,EAAqBD,IAAIE,IAAzB,CAAL,EAAqC;AACjCJ,0BAAUE,IAAIC,KAAd,EAAqBD,IAAIE,IAAzB,IAAiC;AAC7BA,0BAAMF,IAAIE,IADmB;AAE7BC,kCAAc;AAFe,iBAAjC;AAIH;;AAED,gBAAIC,iBAAiB;AACjBC,sBAAM,wBAAcC,OAAd,CAAsBN,GAAtB,CADW;AAEjBO,qBAAKP,IAAIO;AAFQ,aAArB;;AAKAT,sBAAUE,IAAIC,KAAd,EAAqBD,IAAIE,IAAzB,EAA+BC,YAA/B,CAA4CK,IAA5C,CAAiDJ,cAAjD;AACH,SApBD;;AAuBA,eAAOR,QAAQE,SAAR,CAAP;AACH,KA3BM,CAAP;AA4BH,CA7BD;;kBA+BeL,S","file":"buildJson.js","sourcesContent":["import propertyUtils from './propertyUtils';\n\nlet buildJson = (data) => {\n    return new Promise((resolve, reject) => {\n        let topCities = {};\n        \n        data.forEach((obj) => {\n            // Create state if it doesn't exist.\n            if (!topCities[obj.state]) {\n                topCities[obj.state] = {}\n            }\n\n            // Create city if it doesn't exist.\n            if (!topCities[obj.state][obj.name]) {\n                topCities[obj.state][obj.name] = {\n                    name: obj.name,\n                    listingTypes: []\n                }\n            }\n\n            let newListingType = {\n                type: propertyUtils.getType(obj),\n                url: obj.url\n            }\n\n            topCities[obj.state][obj.name].listingTypes.push(newListingType);\n        });\n\n\n        return resolve(topCities);\n    })\n};\n\nexport default buildJson;"]}